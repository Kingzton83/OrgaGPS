openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /api/accounts/activate/:
    post:
      operationId: api_accounts_activate_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivateAccount'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ActivateAccount'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ActivateAccount'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivateAccount'
          description: ''
  /api/accounts/create-user/:
    post:
      operationId: api_accounts_create_user_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Registration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Registration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Registration'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registration'
          description: ''
  /api/accounts/create-custom-user/:
    post:
      operationId: api_accounts_create_custom_user_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Registration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Registration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Registration'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registration'
          description: ''
  /api/accounts/create-user-with-permissions/:
    post:
      operationId: api_accounts_create_user_with_permissions_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Registration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Registration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Registration'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registration'
          description: ''
  /api/accounts/delete-user/{id}/:
    delete:
      operationId: api_accounts_delete_user_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/accounts/edit-user/{id}/:
    put:
      operationId: api_accounts_edit_user_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInfos'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserInfos'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserInfos'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfos'
          description: ''
    patch:
      operationId: api_accounts_edit_user_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserInfos'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserInfos'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserInfos'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfos'
          description: ''
  /api/accounts/password-reset/:
    post:
      operationId: api_accounts_password_reset_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetRequest'
          description: ''
  /api/accounts/password-reset-confirm/:
    post:
      operationId: api_accounts_password_reset_confirm_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordReset'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordReset'
          description: ''
  /api/accounts/register/:
    post:
      operationId: api_accounts_register_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Registration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Registration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Registration'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registration'
          description: ''
  /api/accounts/token/:
    post:
      operationId: api_accounts_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/calendar/create/:
    post:
      operationId: api_calendar_create_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schedule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Schedule'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Schedule'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: ''
  /api/calendar/delete/{schedule_id}/:
    delete:
      operationId: api_calendar_delete_destroy
      parameters:
      - in: path
        name: schedule_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/calendar/edit/{schedule_id}/:
    put:
      operationId: api_calendar_edit_update
      parameters:
      - in: path
        name: schedule_id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schedule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Schedule'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Schedule'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: ''
  /api/calendar/mark-attendance/{schedule_id}/:
    post:
      operationId: api_calendar_mark_attendance_create
      description: Markiert die Anwesenheit eines Benutzers basierend auf seinem Standort
        und der Nähe zur Location.
      parameters:
      - in: path
        name: schedule_id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarkAttendance'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MarkAttendance'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MarkAttendance'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarkAttendance'
          description: ''
  /api/calendar/user_schedule_list/:
    get:
      operationId: api_calendar_user_schedule_list_list
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Schedule'
          description: ''
  /api/db/locations/:
    get:
      operationId: api_db_api_db_locations_list
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Location'
          description: ''
    post:
      operationId: api_db_api_db_locations_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Location'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Location'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Location'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
          description: ''
  /api/db/locations/{id}/:
    get:
      operationId: api_db_api_db_locations_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
          description: ''
    put:
      operationId: api_db_api_db_locations_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Location'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Location'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Location'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
          description: ''
    patch:
      operationId: api_db_api_db_locations_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLocation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLocation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLocation'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
          description: ''
    delete:
      operationId: api_db_api_db_locations_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/db/permissions/:
    get:
      operationId: api_db_api_db_permissions_list
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Permissions'
          description: ''
    post:
      operationId: api_db_api_db_permissions_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Permissions'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Permissions'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Permissions'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permissions'
          description: ''
  /api/db/permissions/{id}/:
    get:
      operationId: api_db_api_db_permissions_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permissions'
          description: ''
    put:
      operationId: api_db_api_db_permissions_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Permissions'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Permissions'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Permissions'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permissions'
          description: ''
    patch:
      operationId: api_db_api_db_permissions_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPermissions'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPermissions'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPermissions'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permissions'
          description: ''
    delete:
      operationId: api_db_api_db_permissions_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/db/schedules/:
    get:
      operationId: api_db_api_db_schedules_list
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Schedule'
          description: ''
    post:
      operationId: api_db_api_db_schedules_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schedule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Schedule'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Schedule'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: ''
  /api/db/schedules/{id}/:
    get:
      operationId: api_db_api_db_schedules_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: ''
    put:
      operationId: api_db_api_db_schedules_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schedule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Schedule'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Schedule'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: ''
    patch:
      operationId: api_db_api_db_schedules_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSchedule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSchedule'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSchedule'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: ''
    delete:
      operationId: api_db_api_db_schedules_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/db/usergroups/:
    get:
      operationId: api_db_api_db_usergroups_list
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserGroup'
          description: ''
    post:
      operationId: api_db_api_db_usergroups_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserGroup'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroup'
          description: ''
  /api/db/usergroups/{id}/:
    get:
      operationId: api_db_api_db_usergroups_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroup'
          description: ''
    put:
      operationId: api_db_api_db_usergroups_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserGroup'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroup'
          description: ''
    patch:
      operationId: api_db_api_db_usergroups_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserGroup'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroup'
          description: ''
    delete:
      operationId: api_db_api_db_usergroups_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/db/users/:
    get:
      operationId: api_db_api_db_users_list
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomUser'
          description: ''
    post:
      operationId: api_db_api_db_users_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomUser'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
  /api/db/users/{id}/:
    get:
      operationId: api_db_api_db_users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
    put:
      operationId: api_db_api_db_users_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomUser'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
    patch:
      operationId: api_db_api_db_users_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCustomUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCustomUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCustomUser'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
    delete:
      operationId: api_db_api_db_users_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/db/users/first-name/:
    get:
      operationId: api_db_api_db_users_first_name_list
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomUserFirstName'
          description: ''
  /api/db/workzones/:
    get:
      operationId: api_db_api_db_workzones_list
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Workzone'
          description: ''
    post:
      operationId: api_db_api_db_workzones_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workzone'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Workzone'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Workzone'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workzone'
          description: ''
  /api/db/workzones/{id}/:
    get:
      operationId: api_db_api_db_workzones_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workzone'
          description: ''
    put:
      operationId: api_db_api_db_workzones_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workzone'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Workzone'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Workzone'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workzone'
          description: ''
    patch:
      operationId: api_db_api_db_workzones_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWorkzone'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedWorkzone'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedWorkzone'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workzone'
          description: ''
    delete:
      operationId: api_db_api_db_workzones_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/db/csrf-token/:
    get:
      operationId: api_db_csrf-token
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Schedule'
          description: ''
  /api/locations/locations/:
    get:
      operationId: api_locations_locations_list
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Location'
          description: ''
  /api/locations/locations/create/:
    post:
      operationId: api_locations_locations_create_create
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          description: No response body
  /api/locations/locations/edit/{location_id}/:
    put:
      operationId: api_locations_locations_edit_update
      description: Class-based view to edit a location by its ID.
      parameters:
      - in: path
        name: location_id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Location'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Location'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Location'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
          description: ''
    patch:
      operationId: api_locations_locations_edit_partial_update
      description: Class-based view to edit a location by its ID.
      parameters:
      - in: path
        name: location_id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLocation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLocation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLocation'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
          description: ''
  /api/schema/:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/workzone/create/:
    post:
      operationId: api_workzone_create_create
      description: |-
        Class-based view to create a Workzone.
        Only 'product_owner' users are allowed to create Workzones.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workzone'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Workzone'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Workzone'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workzone'
          description: ''
  /api/workzone/edit/{workzone_id}/:
    put:
      operationId: api_workzone_edit_update
      description: |-
        Class-based view to edit a Workzone.
        Only 'product_owner' users are allowed to edit Workzones.
      parameters:
      - in: path
        name: workzone_id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workzone'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Workzone'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Workzone'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workzone'
          description: ''
    patch:
      operationId: api_workzone_edit_partial_update
      description: |-
        Class-based view to edit a Workzone.
        Only 'product_owner' users are allowed to edit Workzones.
      parameters:
      - in: path
        name: workzone_id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWorkzone'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedWorkzone'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedWorkzone'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workzone'
          description: ''
  /dj-rest-auth/login/:
    post:
      operationId: dj_rest_auth_login_create
      description: |-
        Check the credentials and return the REST Token
        if the credentials are valid and authenticated.
        Calls Django Auth login method to register User ID
        in Django session framework

        Accept the following POST parameters: username, password
        Return the REST Framework Token Object's key.
      tags:
      - dj-rest-auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: ''
  /dj-rest-auth/logout/:
    post:
      operationId: dj_rest_auth_logout_create
      description: |-
        Calls Django logout method and delete the Token object
        assigned to the current User object.

        Accepts/Returns nothing.
      tags:
      - dj-rest-auth
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /dj-rest-auth/password/change/:
    post:
      operationId: dj_rest_auth_password_change_create
      description: |-
        Calls Django Auth SetPasswordForm save method.

        Accepts the following POST parameters: new_password1, new_password2
        Returns the success/fail message.
      tags:
      - dj-rest-auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChange'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordChange'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordChange'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /dj-rest-auth/password/reset/:
    post:
      operationId: dj_rest_auth_password_reset_create
      description: |-
        Calls Django Auth PasswordResetForm save method.

        Accepts the following POST parameters: email
        Returns the success/fail message.
      tags:
      - dj-rest-auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordReset'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /dj-rest-auth/password/reset/confirm/:
    post:
      operationId: dj_rest_auth_password_reset_confirm_create
      description: |-
        Password reset e-mail link is confirmed, therefore
        this resets the user's password.

        Accepts the following POST parameters: token, uid,
            new_password1, new_password2
        Returns the success/fail message.
      tags:
      - dj-rest-auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
components:
  schemas:
    ActivateAccount:
      type: object
      properties:
        uidb64:
          type: string
        token:
          type: string
      required:
      - token
      - uidb64
    CustomUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        password:
          type: string
          maxLength: 128
        last_login:
          type: string
          format: date-time
          nullable: true
        is_superuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        is_staff:
          type: boolean
          title: Staff status
          description: Designates whether the user can log into this admin site.
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        date_joined:
          type: string
          format: date-time
        product_owner:
          type: boolean
        first_login:
          type: boolean
        image:
          type: string
          format: uri
          nullable: true
        email:
          type: string
          format: email
          maxLength: 200
        phone1:
          type: string
          nullable: true
          maxLength: 200
        phone2:
          type: string
          nullable: true
          maxLength: 200
        address1:
          type: string
          nullable: true
          maxLength: 200
        address2:
          type: string
          nullable: true
          maxLength: 200
        zip_code:
          type: string
          nullable: true
          maxLength: 200
        city:
          type: string
          nullable: true
          maxLength: 200
        country:
          type: string
          nullable: true
          maxLength: 200
        birth_date:
          type: string
          format: date
          nullable: true
        groups:
          type: array
          items:
            type: integer
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
        user_permissions:
          type: array
          items:
            type: integer
          description: Specific permissions for this user.
        workzones:
          type: array
          items:
            type: integer
      required:
      - email
      - id
      - password
      - username
      - workzones
    CustomUserFirstName:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 150
    DistanceUnitEnum:
      enum:
      - m
      - ft
      type: string
      description: |-
        * `m` - Meter
        * `ft` - Feet
    Location:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        location_name:
          type: string
          maxLength: 200
        location_first_name:
          type: string
          maxLength: 200
        location_last_name:
          type: string
          maxLength: 200
        location_email:
          type: string
          format: email
          maxLength: 200
        location_phone1:
          type: string
          nullable: true
          maxLength: 200
        location_phone2:
          type: string
          nullable: true
          maxLength: 200
        location_address1:
          type: string
          nullable: true
          maxLength: 200
        location_address2:
          type: string
          nullable: true
          maxLength: 200
        location_zip_code:
          type: string
          nullable: true
          maxLength: 200
        location_city:
          type: string
          nullable: true
          maxLength: 200
        location_country:
          type: string
          nullable: true
          maxLength: 200
        location_gps_data:
          type: string
          description: Latitude and Longitude in 'lat,lon' format
          maxLength: 100
        location_radius:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,1})?$
          description: Radius in meters
        location_notes:
          type: string
          nullable: true
          maxLength: 500
      required:
      - id
      - location_email
      - location_first_name
      - location_gps_data
      - location_last_name
      - location_name
    Login:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
      required:
      - password
    MarkAttendance:
      type: object
      properties:
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
      required:
      - latitude
      - longitude
    PasswordChange:
      type: object
      properties:
        new_password1:
          type: string
          maxLength: 128
        new_password2:
          type: string
          maxLength: 128
      required:
      - new_password1
      - new_password2
    PasswordReset:
      type: object
      properties:
        uidb64:
          type: string
        token:
          type: string
        new_password:
          type: string
          writeOnly: true
      required:
      - new_password
      - token
      - uidb64
    PasswordResetConfirm:
      type: object
      description: Serializer for confirming a password reset attempt.
      properties:
        new_password1:
          type: string
          maxLength: 128
        new_password2:
          type: string
          maxLength: 128
        uid:
          type: string
        token:
          type: string
      required:
      - new_password1
      - new_password2
      - token
      - uid
    PasswordResetRequest:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    PatchedCustomUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        password:
          type: string
          maxLength: 128
        last_login:
          type: string
          format: date-time
          nullable: true
        is_superuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        is_staff:
          type: boolean
          title: Staff status
          description: Designates whether the user can log into this admin site.
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        date_joined:
          type: string
          format: date-time
        product_owner:
          type: boolean
        first_login:
          type: boolean
        image:
          type: string
          format: uri
          nullable: true
        email:
          type: string
          format: email
          maxLength: 200
        phone1:
          type: string
          nullable: true
          maxLength: 200
        phone2:
          type: string
          nullable: true
          maxLength: 200
        address1:
          type: string
          nullable: true
          maxLength: 200
        address2:
          type: string
          nullable: true
          maxLength: 200
        zip_code:
          type: string
          nullable: true
          maxLength: 200
        city:
          type: string
          nullable: true
          maxLength: 200
        country:
          type: string
          nullable: true
          maxLength: 200
        birth_date:
          type: string
          format: date
          nullable: true
        groups:
          type: array
          items:
            type: integer
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
        user_permissions:
          type: array
          items:
            type: integer
          description: Specific permissions for this user.
        workzones:
          type: array
          items:
            type: integer
    PatchedLocation:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        location_name:
          type: string
          maxLength: 200
        location_first_name:
          type: string
          maxLength: 200
        location_last_name:
          type: string
          maxLength: 200
        location_email:
          type: string
          format: email
          maxLength: 200
        location_phone1:
          type: string
          nullable: true
          maxLength: 200
        location_phone2:
          type: string
          nullable: true
          maxLength: 200
        location_address1:
          type: string
          nullable: true
          maxLength: 200
        location_address2:
          type: string
          nullable: true
          maxLength: 200
        location_zip_code:
          type: string
          nullable: true
          maxLength: 200
        location_city:
          type: string
          nullable: true
          maxLength: 200
        location_country:
          type: string
          nullable: true
          maxLength: 200
        location_gps_data:
          type: string
          description: Latitude and Longitude in 'lat,lon' format
          maxLength: 100
        location_radius:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,1})?$
          description: Radius in meters
        location_notes:
          type: string
          nullable: true
          maxLength: 500
    PatchedPermissions:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        can_add_customuser:
          type: boolean
        can_edit_customuser:
          type: boolean
        can_delete_customuser:
          type: boolean
        can_add_locations:
          type: boolean
        can_edit_locations:
          type: boolean
        can_delete_locations:
          type: boolean
        can_add_schedule:
          type: boolean
        can_edit_schedule:
          type: boolean
        can_delete_schedule:
          type: boolean
        user:
          type: integer
    PatchedSchedule:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        event_name:
          type: string
          maxLength: 200
        start_time:
          type: string
          format: date-time
          nullable: true
        start_time_login:
          type: string
          format: date-time
          nullable: true
        end_time_login:
          type: string
          format: date-time
          nullable: true
        login_time:
          type: string
          format: date-time
          nullable: true
        end_time:
          type: string
          format: date-time
          nullable: true
        start_time_logout:
          type: string
          format: date-time
          nullable: true
        end_time_logout:
          type: string
          format: date-time
          nullable: true
        logout_time:
          type: string
          format: date-time
          nullable: true
        description:
          type: string
          nullable: true
        status:
          type: string
          maxLength: 100
        punctual:
          type: boolean
        user:
          type: integer
        location:
          type: integer
          nullable: true
    PatchedUserDetails:
      type: object
      description: User model w/o password
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          readOnly: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
    PatchedUserGroup:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        workzone:
          type: integer
        members:
          type: array
          items:
            type: integer
    PatchedUserInfos:
      type: object
      properties:
        image:
          type: string
          format: uri
          nullable: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 200
        phone1:
          type: string
          nullable: true
          maxLength: 200
        phone2:
          type: string
          nullable: true
          maxLength: 200
        address1:
          type: string
          nullable: true
          maxLength: 200
        address2:
          type: string
          nullable: true
          maxLength: 200
        zip_code:
          type: string
          nullable: true
          maxLength: 200
        city:
          type: string
          nullable: true
          maxLength: 200
        country:
          type: string
          nullable: true
          maxLength: 200
        birth_date:
          type: string
          format: date
          nullable: true
    PatchedWorkzone:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        address1:
          type: string
          nullable: true
          maxLength: 200
        address2:
          type: string
          nullable: true
          maxLength: 200
        zip_code:
          type: string
          nullable: true
          maxLength: 200
        city:
          type: string
          nullable: true
          maxLength: 200
        country:
          type: string
          nullable: true
          maxLength: 200
        distance_unit:
          allOf:
          - $ref: '#/components/schemas/DistanceUnitEnum'
          description: |-
            Preferred distance unit for all users in this workzone

            * `m` - Meter
            * `ft` - Feet
    Permissions:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        can_add_customuser:
          type: boolean
        can_edit_customuser:
          type: boolean
        can_delete_customuser:
          type: boolean
        can_add_locations:
          type: boolean
        can_edit_locations:
          type: boolean
        can_delete_locations:
          type: boolean
        can_add_schedule:
          type: boolean
        can_edit_schedule:
          type: boolean
        can_delete_schedule:
          type: boolean
        user:
          type: integer
      required:
      - id
      - user
    Registration:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
        password:
          type: string
          writeOnly: true
      required:
      - email
      - password
      - username
    RestAuthDetail:
      type: object
      properties:
        detail:
          type: string
          readOnly: true
      required:
      - detail
    Schedule:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        event_name:
          type: string
          maxLength: 200
        start_time:
          type: string
          format: date-time
          nullable: true
        end_time:
          type: string
          format: date-time
          nullable: true
        description:
          type: string
          nullable: true
        status:
          type: string
          maxLength: 100
        location:
          $ref: '#/components/schemas/Location'
        location_id:
          type: integer
          writeOnly: true
        punctual:
          type: boolean
      required:
      - event_name
      - id
    Token:
      type: object
      description: Serializer for Token model.
      properties:
        key:
          type: string
          maxLength: 40
      required:
      - key
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    UserDetails:
      type: object
      description: User model w/o password
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          readOnly: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
      required:
      - email
      - pk
      - username
    UserGroup:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        workzone:
          type: integer
        members:
          type: array
          items:
            type: integer
      required:
      - id
      - members
      - name
      - workzone
    UserInfos:
      type: object
      properties:
        image:
          type: string
          format: uri
          nullable: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 200
        phone1:
          type: string
          nullable: true
          maxLength: 200
        phone2:
          type: string
          nullable: true
          maxLength: 200
        address1:
          type: string
          nullable: true
          maxLength: 200
        address2:
          type: string
          nullable: true
          maxLength: 200
        zip_code:
          type: string
          nullable: true
          maxLength: 200
        city:
          type: string
          nullable: true
          maxLength: 200
        country:
          type: string
          nullable: true
          maxLength: 200
        birth_date:
          type: string
          format: date
          nullable: true
      required:
      - email
    Workzone:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        address1:
          type: string
          nullable: true
          maxLength: 200
        address2:
          type: string
          nullable: true
          maxLength: 200
        zip_code:
          type: string
          nullable: true
          maxLength: 200
        city:
          type: string
          nullable: true
          maxLength: 200
        country:
          type: string
          nullable: true
          maxLength: 200
        distance_unit:
          allOf:
          - $ref: '#/components/schemas/DistanceUnitEnum'
          description: |-
            Preferred distance unit for all users in this workzone

            * `m` - Meter
            * `ft` - Feet
      required:
      - id
      - name
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
